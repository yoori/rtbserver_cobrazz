# Open Software Building Environment (OpenSBE, OSBE)
# Copyright (C) 2001-2002 Boris Kolpackov
# Copyright (C) 2001-2004 Pavel Gubin, Karen Arutyunov
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#
# File   : XSD.post.rules.in
# Author : Konstantin Sadov <Konstantin.Sadov@gmail.com>

ifndef _CXX_XML_XSD_POST_RULES_
define _CXX_XML_XSD_POST_RULES_
1
endef

_xml_xsd_rule = $(addsuffix .$(_xml_xsd_extention),$(basename $1))
_xml_xsd_extention := cpp
xml_xsd_sources := $(foreach _xsd,$(xsd_files),$(call _xml_xsd_rule,$(_xsd)))
_xml_xsd_extention := hpp
xml_xsd_headers := $(foreach _xsd,$(xsd_files),$(call _xml_xsd_rule,$(_xsd)))

ifneq ($(xml_xsd_produces_cpp),no)
_xml_xsd_extention := cpp
_xml_xsd_bindings := $(xml_xsd_sources)
else
_xml_xsd_extention := hpp
_xml_xsd_bindings := $(xml_xsd_headers)
xml_xsd_sources :=
endif

sources := $(sources) $(xml_xsd_sources)

_deps_prerequisites := $(_xml_xsd_bindings) $(_deps_prerequisites)

.PHONY: clean_xml_xsd cleanall_xml_xsd

clean: clean_xml_xsd

clean_xml_xsd:
	-$(RM) $(RM_FLAGS) $(xml_xsd_sources)

cleanall: cleanall_xml_xsd

cleanall_xml_xsd:
	-$(RM) $(RM_FLAGS) $(xml_xsd_headers)

define _xml_xsd_rules
$(call _xml_xsd_rule,$(1)) : $(1)

endef

$(foreach _xsd,$(xsd_files),$(eval $(call _xml_xsd_rules,$(_xsd))))

@CD_TB@$(xml_xsd_sources)@CD_TE@ :
	@CD_CB@
	@CD_LB@$(CXX_XML_XSD_TRANSLATOR) $(CXX_XML_XSD_TRANSLATOR_REAL_FLAGS) $(CXX_XML_XSD_TRANSLATOR_OUTPUTDIRFLAG) $(@D) $<@CD_LE@
	@CD_CE@

_xml_xsd_includes := $(foreach _path,$(xsd_includes),-I$(top_builddir)/$(_path))
CPP_FLAGS := $(_xml_xsd_includes) $(CPP_FLAGS)
define xml_xsd_rules_post_config
CPP_FLAGS := $(foreach _path,$(xsd_includes),-I$$(top_builddir)/$(_path)) $$(CPP_FLAGS)
endef
rules_post_config := $(rules_post_config)$(xml_xsd_rules_post_config)

@CXX_XML_XSD_TRANSLATOR_POST_RULES@

# to be able to run XML producing tools BEFORE XML compilation
$(_xml_xsd_bindings) : | $(_xml_xsd_prerequisites)

endif  #_CXX_XML_XSD_POST_RULES_
