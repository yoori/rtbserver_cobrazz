# Open Software Building Environment (OpenSBE, OSBE)
# Copyright (C) 2001-2002 Boris Kolpackov
# Copyright (C) 2001-2004 Pavel Gubin, Karen Arutyunov
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#
# File   : GCC.def
# Author : Karen Arutyunov <karen@ipmce.ru>

cxx_known_name="GNU Compiler Collection"
cxx_platforms="%"
cxx_default_for_platforms="solaris% linux% freebsd% openbsd% netbsd% darwin%"

GCC_defs()
{
# Compiler definition
  CXX=${CXX-"g++"}

# Compiler flags definition

  if test "`osbe_var_undefined CXXFLAGS`" -eq "1"; then
    CXXFLAGS="-Wall -g -O3"

    GCC_defs__fPIC="0"

    case $host_cpu in
      x86_64*) GCC_defs__fPIC="1";;
    esac

    case $host_os in
      solaris*) GCC_defs__fPIC="1";;
    esac

    if test "$GCC_defs__fPIC" = "1"; then
      CXXFLAGS="$CXXFLAGS -fPIC"
    fi

  fi

# Dependency generator

  CXXDEP=${CXXDEP:-'@make_depend () { target=$$1; shift; echo $(CXX) -x c++ -M -MP -MT $$target -MF $$target "$$@" && $(CXX) -x c++ -M -MP -MT $$target -MF $$target "$$@" || ($(RM) $(RM_FLAGS) $$target && exit 1); }; make_depend'}

# Linkers definitions
  LD_EX=${LD_EX-"g++"}

  if test "`osbe_var_undefined LD_SO`" -eq "1"; then
    case $host_os in
      darwin*) LD_SO="g++ -dynamiclib";;
            *) LD_SO="g++ -shared";;
    esac
  fi

# Archiver related definitions
  if test "`osbe_var_undefined AR`" -eq "1"; then
    case $host_os in
      solaris*) AR="/usr/xpg4/bin/ar";;
             *) AR="ar";;
    esac
  fi

  ARFLAGS=${ARFLAGS-"rcus"}

# File templates definitions
  OBJ_EXT=${OBJ_EXT-".o"}
  AR_TARGET_TEMPLATE=${AR_TARGET_TEMPLATE-"lib%.a"}

  if test "`osbe_var_undefined EX_TARGET_TEMPLATE`" -eq "1"; then
    case $host_os in
      cygwin*) EX_TARGET_TEMPLATE="%.exe";;
            *) EX_TARGET_TEMPLATE="%";;
    esac
  fi

  if test "`osbe_var_undefined SO_PRIMARY_TARGET_TEMPLATE`" -eq "1"; then
    case $host_os in
      cygwin*) SO_PRIMARY_TARGET_TEMPLATE="lib%.dll";;
      darwin*) SO_PRIMARY_TARGET_TEMPLATE="lib%.dylib";;
            *) SO_PRIMARY_TARGET_TEMPLATE="lib%.so";;
    esac
  fi

  SO_SECONDARY_TARGET_TEMPLATE=${SO_SECONDARY_TARGET_TEMPLATE-""}

# I met some system where there were no path to libstdc++.so by default
# (Solaris, Mandrake Linux for example). So adding /usr/local/lib/ to
# LD_LIBRARY_PATH. This affects only" make check".
# Maybe need some better solution here

  osbe_library_path "/usr/local/lib/"

# Precompiled headers support

CXX_PH_SUPPORTED=yes
CXX_PH_FILE='$(abspath .)/_osbe_ph_$(libname).$(cxx_type).hpp'
CXX_PH_RESULT='$(_ph_file).gch'
CXX_PH_USAGE='-include $(_ph_file)'
CXX_PH_FLAGS='-x c++'
}
