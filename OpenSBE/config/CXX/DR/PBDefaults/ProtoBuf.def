# Open Software Building Environment (OpenSBE, OSBE)
# Copyright (C) 2001-2002 Boris Kolpackov
# Copyright (C) 2001-2004 Pavel Gubin, Karen Arutyunov
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#
# File   : ProtoBuf.def
# Author : Konstantin Sadov <Konstantin.Sadov@gmail.com>

case $host_os in
  cygwin*)
    ProtoBuf_cxx_dr_protobuf_defs__lib_prefix=
    ProtoBuf_cxx_dr_protobuf_defs__lib_suffix=.lib
    ProtoBuf_cxx_dr_protobuf_defs__lib_debug_suffix=d.lib
    ProtoBuf_cxx_dr_protobuf_defs__exe_suffix=.exe
    ;;
  *)
    ProtoBuf_cxx_dr_protobuf_defs__lib_prefix=lib
    ProtoBuf_cxx_dr_protobuf_defs__lib_suffix=.so
    ProtoBuf_cxx_dr_protobuf_defs__lib_debug_suffix=d.so
    ProtoBuf_cxx_dr_protobuf_defs__exe_suffix=
    ;;
esac

cxx_dr_protobuf_identifier="ProtoBuf"
cxx_dr_protobuf_known_name="Google ProtoBuf to C++ translator"
cxx_dr_protobuf_platforms='cygwin% linux% darwin%'

cxx_dr_protobuf_default_for_platforms=\
"$cxx_dr_protobuf_platforms"

cxx_dr_protobuf_location_search_hint=\
"google/protobuf/descriptor.h protoc$ProtoBuf_cxx_dr_protobuf_defs__exe_suffix"
cxx_dr_protobuf_location_search_opt_func="ProtoBuf_cxx_search_opt_func"
cxx_dr_protobuf_location_search_acknowledge_func=\
"ProtoBuf_cxx_search_acknowledge_func"

ProtoBuf_cxx_dr_protobuf_defs()
{
  if test "$osbe_enable_guess_location" -eq "0" -o \
     "`osbe_var_undefined CXX_DR_PROTOBUF_TRANSLATOR`" -eq "0" -a \
     "`osbe_var_undefined CXX_DR_PROTOBUF_CPPFLAGS`" -eq "0" -a \
     "`osbe_var_undefined CXX_DR_PROTOBUF_LDFLAGS`" -eq "0" -a \
     "`osbe_var_undefined CXX_DR_PROTOBUF_LIBS`" -eq "0"
   then
    ProtoBuf_cxx_dr_protobuf_defs__no_guess_location="1"
  else
    ProtoBuf_cxx_dr_protobuf_defs__no_guess_location="0"
  fi

  ProtoBuf_cxx_dr_protobuf_defs__libs="protobuf"

  if test -n "$cxx_dr_protobuf_dir"; then

#
# Detecting CXX_DR_PROTOBUF_TRANSLATOR
#
    if test "`osbe_var_undefined CXX_DR_PROTOBUF_TRANSLATOR`" -eq "1"; then

      ProtoBuf_cxx_dr_protobuf_defs_=\
"protoc$ProtoBuf_cxx_dr_protobuf_defs__exe_suffix"

      if test "$osbe_enable_guess_location" -eq "1"; then
#
# If allowed to guess, will detect translator path
#
        ProtoBuf_cxx_dr_protobuf_defs__path=\
`osbe_guess_location "ProtoBuf translator" \
                     "$cxx_dr_protobuf_dir" \
                     "$ProtoBuf_cxx_dr_protobuf_defs_" \
                     "ProtoBuf_cxx_search_opt_func"`

        if test -n "$ProtoBuf_cxx_dr_protobuf_defs__path"; then
          CXX_DR_PROTOBUF_TRANSLATOR=\
`osbe_suffix_words "/$ProtoBuf_cxx_dr_protobuf_defs_" \
                   "$ProtoBuf_cxx_dr_protobuf_defs__path"`
        fi

      else
#
# If not allowed to guess, will just assign most probable translator path
#
        CXX_DR_PROTOBUF_TRANSLATOR="$cxx_dr_protobuf_dir/bin/protoc"
      fi

    fi

#
# Detecting CXX_DR_PROTOBUF_CPPFLAGS
#
    if test "`osbe_var_undefined CXX_DR_PROTOBUF_CPPFLAGS`" -eq "1"; then

      if test "$osbe_enable_guess_location" -eq "1"; then
#
# If allowed to guess, will detect C++ include paths for ProtoBuf
#
        osbe_guess_each_location "$cxx_dr_protobuf_dir" \
                                 "google/protobuf/descriptor.h" \
                                 "ProtoBuf headers" \
                                 ProtoBuf_cxx_dr_protobuf_defs__include_path \
                                 "ProtoBuf_cxx_search_opt_func" \
                                 "ProtoBuf_cxx_search_acknowledge_func"

      else
#
# If not allowed to guess, will just assign most probable C++ include paths
#
        ProtoBuf_cxx_dr_protobuf_defs__include_path=\
"$cxx_dr_protobuf_dir/include"

      fi

      if test -n "$ProtoBuf_cxx_dr_protobuf_defs__include_path"; then
        CXX_DR_PROTOBUF_CPPFLAGS=\
`osbe_prefix_words "-I" "$ProtoBuf_cxx_dr_protobuf_defs__include_path"`
      fi

    fi

  fi

  if test "`osbe_var_undefined CXX_DR_PROTOBUF_LIBS`" -eq "1"; then
    CXX_DR_PROTOBUF_LIBS=`osbe_prefix_words "-l" "$ProtoBuf_cxx_dr_protobuf_defs__libs"`
  fi
}

ProtoBuf_cxx_dr_protobuf_postconfig()
{
  CXX_DR_PROTOBUF_OUTPUTDIRFLAG='--proto_path=$(srcdir) --cpp_out=$(@D)'

  CXX_DR_PROTOBUF_TRANSLATOR_FLAGS="${CXX_DR_PROTOBUF_EXTRA_FLAGS}"
}

ProtoBuf_cxx_search_opt_func()
{
  $echo "-type f -o -type l"
}

ProtoBuf_cxx_search_acknowledge_func()
{
  ProtoBuf_cxx_search_acknowledge_func__signature=`cat "$1"|grep -a "google"`

  if test -z "$ProtoBuf_cxx_search_acknowledge_func__signature"; then
    $echo "0"
  else
    $echo "1"
  fi
}
