use strict;
use warnings;
our $config;

sub adServerApacheStatusMIB
{
  my ($o, $cfg) = @_;
  # get function parameters
  my $mib_index = $cfg->{'args'}[0]->{'index'};
  my $url = $cfg->{'args'}[0]->{'url'};

  $mib_index = ".$mib_index";
  my $cmd = "curl -s -m $config->{'cmd_timeout'} ";
  my $r = 0;

  my $start_time = gettimeofday();
# print "$cmd $url\n";

  foreach (`$cmd $url`)
  {
    chomp;
    my $s = $_;
    if ( /Scoreboard/ )
    {
      $$o{'apsOpenSlots' . $mib_index}= ($s =~ tr/.//);
      $$o{'apsWaitingForConnection' . $mib_index}= ($s =~ tr/_//);
      $$o{'apsSendingReply' . $mib_index}= ($s =~ tr/W//);
      $$o{'apsReadingRequest' . $mib_index}= ($s =~ tr/R//);
      $$o{'apsKeepAlive' . $mib_index} = ($s =~ tr/K//);
      $$o{'apsDNSLookup' . $mib_index} = ($s =~ tr/D//);
      $$o{'apsOtherSlots' .$mib_index} = length($s);
    }
    elsif ( /^Total Accesses/ )
    {
      $$o{'apsTotalAccesses' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^CPULoad/ )
    {
      $$o{'apsCpuLoad' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^Uptime/ )
    {
      $$o{'apsUptime' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^BusyWorkers/ )
    {
      $$o{'apsBusyWorkers' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^IdleWorkers/ )
    {
      $$o{'apsIdleWorkers' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^ReqPerSec/ )
    {
      $$o{'apsReqPersSec' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^BytesPerSec/ )
    {
      $$o{'apsBytesPerSec' . $mib_index} = ( split /: /, $s )[1];
    }
    elsif ( /^BytesPerReq/ )
    {
      $$o{'apsBytesPerReq' . $mib_index} = ( split /: /, $s )[1];
    }
  }

  my $cmd_r = $? >> 8;
  $$o{'apsCmdExecTime' . $mib_index} = sprintf('%.3f',scalar gettimeofday() - $start_time);
  $$o{'apsCmdExecStatus' . $mib_index} = $cmd_r;
  $$o{'apsUrl' . $mib_index} = $url;

  $r = $cmd_r if $cmd_r;

  return  $r;
}

return 1;
